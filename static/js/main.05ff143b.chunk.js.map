{"version":3,"sources":["api.js","style.js","components/LaunchItem/LaunchItem.js","assets/SpaceX-Logo.png","pages/Launches/Launches.js","App.js","index.js"],"names":["api","axios","create","baseURL","getLaunches","a","status","initialDate","finalDate","upcomingLaunches","pageParam","periodLaunches","params","limit","offset","start","Date","end","launch_success","get","data","Table","styled","table","Td","td","Th","th","Tr","tr","TabButton","button","Button","Controls","div","Title","h1","Logo","img","Filters","LaunchItem","launch","onToggleFavorite","isFavorite","className","src","links","mission_patch_small","width","alt","mission_name","launch_year","rocket","rocket_name","flight_number","toString","onClick","defaultFilters","Launches","useState","showFavorites","setShowFavorites","localStorageKey","JSON","parse","localStorage","getItem","value","setValue","setItem","stringify","useStateWithLocalStorage","favorites","setFavorites","filters","setFilters","title","setTitle","useInfiniteQuery","getNextPageParam","lastPage","pages","length","isLoading","launchesQuery","fetchNextPage","launches","flat","lastLaunchPage","handleChangeLaunchType","x","target","handleToggleFavorite","favPosition","findIndex","favLaunch","splice","logo","onChange","type","checked","name","dataLength","next","hasMore","loader","endMessage","style","textAlign","map","queryClient","QueryClient","defaultOptions","queries","staleTime","Infinity","App","client","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.05ff143b.chunk.js","sourcesContent":["import axios from \"axios\";\n\nconst api = axios.create({\n  baseURL: \"https://api.spacexdata.com/v3\",\n});\n\n// To add in a .env file\nexport const LIMIT_PER_REQUEST = 4;\n\nexport const getLaunches = async ({\n  status,\n  initialDate,\n  finalDate,\n  upcomingLaunches,\n  pageParam,\n}) => {\n  const periodLaunches = upcomingLaunches ? \"upcoming\" : \"past\";\n\n  let params = {\n    limit: LIMIT_PER_REQUEST,\n    offset: pageParam * LIMIT_PER_REQUEST,\n    //Min date possible\n    start: new Date(-8640000000000000),\n    //Max date possible\n    end: new Date(253402300799999),\n  };\n\n  if (status) {\n    params = { ...params, launch_success: status === \"true\" };\n  }\n\n  if (initialDate) {\n    params = {\n      ...params,\n      start: initialDate,\n    };\n  }\n\n  if (finalDate) {\n    params = {\n      ...params,\n      end: finalDate,\n    };\n  }\n\n  const { data } = await api.get(`/launches/${periodLaunches}`, {\n    params,\n  });\n  return data;\n};\n\nexport default api;\n","import styled from \"@emotion/styled\";\n\nexport const Table = styled.table`\n  font-family: arial, sans-serif;\n  border-collapse: collapse;\n  width: 100%;\n  margin: 1rem auto;\n`;\n\nexport const Td = styled.td`\n  border: 1px solid #2c2c2c;\n  text-align: center;\n  padding: 8px;\n  color: #fff;\n`;\n\nexport const Th = styled.th`\n  border: 1px solid #2c2c2c;\n  text-align: center;\n  padding: 8px;\n  color: #fff;\n`;\n\nexport const Tr = styled.tr`\n  &:nth-of-type(even) {\n    background-color: #dddddd3b;\n  }\n`;\n\nexport const TabButton = styled.button`\n  margin-right: 1rem;\n  padding: .5rem;\n  min-width: 150px;\n  background-color: #cbcbcb;\n  border: 1px solid #2c2c2c;\n  border-radius: 6px;\n  font-weight: bold;\n  cursor: pointer;\n  &:hover {\n    background-color: #696767;\n    color: #fff;\n  }\n`;\n\nexport const Button = styled.button`\n  background-color: #cbcbcb;\n  cursor: pointer;\n  padding: .5rem 1rem;\n  border-radius: 6px;\n  border: 1px solid #2c2c2c;\n  font-weight: bold;\n  font-size: 1rem;\n  min-width: 100px;\n  color: #2c2c2c;\n  &:hover {\n    background-color: #696767;\n    color: #fff;\n  }\n`;\n\nexport const Controls = styled.div`\n  text-align: center;\n`;\n\nexport const Title = styled.h1`\n  color: #fff;\n  max-width: 200px;\n  margin: 2.5rem auto;\n  background-color: #0000006e;\n  border-radius: 6px;\n`;\n\nexport const Logo = styled.img`\n  background-color: #0000006e;\n  padding: 2rem;\n  border-bottom-left-radius: 35px;\n  border-bottom-right-radius: 35px;\n`;\n\nexport const Filters = styled.div`\n  color: #fff;\n  div {\n    margin: .5rem auto;\n    .react-date-picker {\n      margin-left: 10px;\n\n      .react-date-picker__button {\n        background-color: #cbcbcb;\n      }\n    }\n  }\n`;","import React from \"react\";\nimport { Td, Tr, Button } from \"../../style\";\n\nconst LaunchItem = ({ launch, onToggleFavorite, isFavorite }) => (\n  <Tr className={`${isFavorite ? \"favorite\" : \"\"}`}>\n    <Td>\n      <img\n        src={\n          launch.links.mission_patch_small\n            ? launch.links.mission_patch_small\n            : \"https://via.placeholder.com/100/000/fff?text=No+Badge\"\n        }\n        width=\"100\"\n        alt={launch.mission_name}\n      />\n    </Td>\n    <Td>\n      <span>\n        {launch.mission_name} ({launch.launch_year})\n      </span>\n    </Td>\n    <Td>{launch.rocket.rocket_name}</Td>\n    <Td>{launch.flight_number}</Td>\n    <Td>\n      {launch.launch_success ? launch.launch_success.toString() : \"unknown\"}\n    </Td>\n    <Td>\n      <Button onClick={() => onToggleFavorite(launch)}>\n        {isFavorite ? \"Remove\" : \"Add\"}\n      </Button>\n    </Td>\n  </Tr>\n);\n\nexport default LaunchItem;\n","export default __webpack_public_path__ + \"static/media/SpaceX-Logo.e548eb03.png\";","import React, { useState } from \"react\";\nimport { useInfiniteQuery } from \"react-query\";\nimport { getLaunches, LIMIT_PER_REQUEST } from \"../../api\";\nimport LaunchItem from \"../../components/LaunchItem/LaunchItem\";\nimport { TabButton } from \"../../style\";\nimport InfiniteScroll from \"react-infinite-scroll-component\";\nimport { Table, Th, Tr, Controls, Title, Logo, Filters } from \"../../style\";\nimport logo from \"../../assets/SpaceX-Logo.png\";\nimport DatePicker from \"react-date-picker\";\n\nconst defaultFilters = {\n  status: \"\",\n  initialDate: null,\n  finalDate: null,\n  upcomingLaunches: true,\n};\n\nconst useStateWithLocalStorage = (localStorageKey) => {\n  const [value, setValue] = useState(\n    JSON.parse(localStorage.getItem(localStorageKey)) || []\n  );\n\n  localStorage.setItem(localStorageKey, JSON.stringify(value));\n\n  return [value, setValue];\n};\n\nexport const Launches = () => {\n  const [showFavorites, setShowFavorites] = useState(false);\n  const [favorites, setFavorites] = useStateWithLocalStorage(\"favorites\");\n  const [filters, setFilters] = useState(defaultFilters);\n  const [title, setTitle] = useState('Upcoming');\n\n  const {\n    isLoading,\n    data: launchesQuery,\n    fetchNextPage,\n  } = useInfiniteQuery(\n    [\"launches\", filters],\n    ({ pageParam = 0 }) =>\n      getLaunches({\n        ...filters,\n        pageParam,\n      }),\n    {\n      getNextPageParam: (lastPage, pages) => pages.length,\n    }\n  );\n\n  let launches = launchesQuery ? launchesQuery.pages.flat() : [];\n  const lastLaunchPage = launchesQuery?.pages[launchesQuery?.pages.length - 1];\n\n  launches = showFavorites ? favorites : launches;\n\n  const handleUpcomingLaunches = () => {\n    setShowFavorites(false);\n    setFilters({ ...filters, upcomingLaunches: true });\n    setTitle('Upcoming');\n  };\n\n  const handlePastLaunches = () => {\n    setShowFavorites(false);\n    setFilters({ ...filters, upcomingLaunches: false });\n    setTitle('Past');\n  };\n\n  const handleFavoriteLaunches = () => {\n    setShowFavorites(true);\n    setTitle('Favorites');\n  };\n\n  const handleChangeLaunchType = (x) => {\n    setFilters({ ...filters, status: x.target.value });\n  };\n\n  const handleToggleFavorite = (launch) => {\n    const favPosition = favorites.findIndex(\n      (favLaunch) => favLaunch.mission_name === launch.mission_name\n    );\n    if (favPosition >= 0) {\n      favorites.splice(favPosition, 1);\n      setFavorites([...favorites]);\n    } else {\n      setFavorites([...favorites, launch]);\n    }\n  };\n\n  return (\n    <div>\n      <Controls>\n        <Logo src={logo} alt=\"SpaceX Logo\" width=\"250\" />\n        <Title>Launches</Title>\n        <TabButton onClick={handleUpcomingLaunches}>Upcoming</TabButton>\n        <TabButton onClick={handlePastLaunches}>Past</TabButton>\n        <TabButton onClick={handleFavoriteLaunches}>Favorites</TabButton>\n\n        <Filters>\n          <div>\n            Initial date\n            <DatePicker\n              onChange={(value) =>\n                setFilters({ ...filters, initialDate: value })\n              }\n              value={filters.initialDate}\n            />\n          </div>\n          <div>\n            Final date\n            <DatePicker\n              onChange={(value) => setFilters({ ...filters, finalDate: value })}\n              value={filters.finalDate}\n            />\n          </div>\n          <input\n            type=\"radio\"\n            value=\"\"\n            checked={filters.status === \"\"}\n            onChange={handleChangeLaunchType}\n            name=\"all\"\n          />{\" \"}\n          all\n          <input\n            type=\"radio\"\n            value=\"true\"\n            checked={filters.status === \"true\"}\n            onChange={handleChangeLaunchType}\n            name=\"succeeded\"\n          />{\" \"}\n          succeeded\n          <input\n            type=\"radio\"\n            value=\"false\"\n            checked={filters.status === \"false\"}\n            onChange={handleChangeLaunchType}\n            name=\"unsucceeded\"\n          />{\" \"}\n          unsucceeded\n        </Filters>\n      </Controls>\n\n      <h2>{title}</h2>\n\n      {isLoading ? (\n        <p>Show Loading...</p>\n      ) : (\n        <>\n          {!launches.length ? (\n            <p>Empty</p>\n          ) : (\n            <InfiniteScroll\n              dataLength={launches.length}\n              next={() => fetchNextPage()}\n              hasMore={\n                !showFavorites && lastLaunchPage.length === LIMIT_PER_REQUEST\n              }\n              loader={<h4>Loading...</h4>}\n              endMessage={\n                <p style={{ textAlign: \"center\" }}>\n                  <b>Yay! You have seen it all</b>\n                </p>\n              }\n            >\n              <Table>\n                <thead>\n                  <Tr>\n                    <Th>Badge</Th>\n                    <Th>Mission</Th>\n                    <Th>Rocket</Th>\n                    <Th>Number</Th>\n                    <Th>Success</Th>\n                    <Th>Favorite</Th>\n                  </Tr>\n                </thead>\n                <tbody>\n                  {launches.map((launch) => (\n                    <LaunchItem\n                      launch={launch}\n                      onToggleFavorite={handleToggleFavorite}\n                      isFavorite={\n                        favorites.findIndex(\n                          (favLaunch) =>\n                            favLaunch.mission_name === launch.mission_name\n                        ) >= 0\n                      }\n                      key={launch.mission_name}\n                    />\n                  ))}\n                </tbody>\n              </Table>\n            </InfiniteScroll>\n          )}\n        </>\n      )}\n    </div>\n  );\n};\n\nexport default Launches;\n","import { QueryClient, QueryClientProvider } from \"react-query\";\nimport Launches from \"./pages/Launches/Launches\";\n\nconst queryClient = new QueryClient({\n  defaultOptions: {\n    queries: {\n      staleTime: Infinity,\n    },\n  },\n});\n\nfunction App() {\n  return (\n    <div className=\"App\">\n      <QueryClientProvider client={queryClient}>\n        <Launches />\n      </QueryClientProvider>\n    </div>\n  );\n}\n\nexport default App;\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport \"./index.css\";\nimport App from \"./App\";\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById(\"root\")\n);\n"],"sourceRoot":""}